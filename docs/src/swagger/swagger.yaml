openapi: "3.0.0"
info:
  version: "0.1"
  title: "Homekids"
servers:
  - url: "http://localhost/api"
    description: "local"
  - url: "http://localhost:8081/api"
    description: "local 8081"
paths:
  /client/v1/users/login:
    post:
      tags: [User]
      summary: "Login into account"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login: 
                  type: string
                password:
                  type: string
              example: 
                login: "user1"
                password: "1234"
      responses:
        200: 
          description: "OK"

  /client/v1/users/check:
    post:
      tags: [User]
      summary: "Check if token is valid"
      security:
      - bearerAuth: []
      responses:
        200: 
          description: "OK"

  /client/v1/users/{user_id}/company:
    get:
      tags:
      - Company
      summary: "Get company of auth user"
      parameters:
        - $ref: "#/components/parameters/UserId"
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"
    put:
      tags: [Company]
      summary: "Update company of auth user"
      parameters:
        - in: path
          name: user_id
          description: "ID of user"
          example: 1
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Краткое наименование организации"
                full_name:
                  type: string
                  description: "Полное наименование организации"
                phone:
                  type: string
                  description: "Номер телефона организации"
                email:
                  type: string
                  description: "Электронная почта организации"
                site:
                  type: string
                  description: "Ссылка на официальный сайт организации"
                owner:
                  type: string
                  description: "Руководитель организации"
                responsible:
                  type: string
                  description: "Ответственный за предоставление информации"
                responsible_phone:
                  type: string
                  description: "Телефон ответственного за предоставление информации"
                organization_type_id:
                  type: number
                  description: "Тип организации"
                district_id:
                  type: number
                  description: "Район"
                education_license:
                  type: object
                  description: "Лицензия на осуществление образовательной деятельности"
                  nullable: true
                  properties:
                    number:
                      type: number
                      description: "Номер лицензии"
                    type:
                      type: string
                      description: "Вид деятельности"
                    date:
                      type: string
                      description: "Дата выдачи лицензии"
                medical_license:
                  type: object
                  description: "Лицензия на осуществление медицинской деятельности"
                  nullable: true
                  properties:
                    number:
                      type: number
                      description: "Номер лицензии"
                    date:
                      type: string
                      description: "Дата выдачи лицензии"
                is_has_innovative_platform:
                  type: boolean
                  description: "Наличие инновационной площадки в организации"
              example:
                name: "string"
                full_name: "string"
                phone: "string"
                email: "string"
                site: "string"
                owner: "string"
                responsible: "string"
                responsible_phone: "string"
                organization_type_id: 1
                district_id: 1
                education_license:
                  number: 100
                  type: "string"
                  date: "30.06.2022"
                medical_license:
                  number: 200
                  date: "30.06.2022"
                is_has_innovative_platform: true
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"

  /admin/v1/users/{user_id}/company/approve:
    patch:
      tags: [Company]
      summary: "Approve company"
      parameters:
        - $ref: "#/components/parameters/UserId"
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"

  /admin/v1/users/{user_id}/company/reject:
    patch:
      tags: [Company]
      summary: "Reject company"
      parameters:
        - $ref: "#/components/parameters/UserId"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  example: "comment"
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"

  /client/v1/dictionaries/categories/{category}:
    get:
      tags: [Dictionary]
      summary: "Get all dicionaries of specified category"
      parameters:
        - in: path
          name: category
          description: "Slug of category"
          example: "organization-type"
          required: true
          schema:
            type: string
            enum:
            - organization-type
            - district
            - payment-method
            - volunteer
            - needy-category
            - needy-category-target-group
            - social-service
            - implementation-level
            - rnsu-category
            - public-work
            - service-name
            - service-type
            - need-recognition
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"

  /client/v1/dictionaries/categories/{parent_category}/{child_category}:
    get:
      tags: [Dictionary]
      summary: "Get relationship between dictionaries of parent category and dictionaries of child category"
      parameters:
        - in: path
          name: parent_category
          description: "Slug of parent category"
          example: needy-category
          required: true
          schema:
            type: string
            enum:
            - organization-type
            - district
            - payment-method
            - volunteer
            - needy-category
            - needy-category-target-group
            - social-service
            - implementation-level
            - rnsu-category
            - public-work
            - service-name
            - service-type
            - need-recognition
        - in: path
          name: child_category
          description: "Slug of child category"
          example: needy-category-target-group
          required: true
          schema:
            type: string
            enum:
            - organization-type
            - district
            - payment-method
            - volunteer
            - needy-category
            - needy-category-target-group
            - social-service
            - implementation-level
            - rnsu-category
            - public-work
            - service-name
            - service-type
            - need-recognition
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"

  /client/v1/users/{user_id}/files:
    post:
      tags: [File]
      summary: "Upload file"
      parameters:
        - $ref: "#/components/parameters/UserId"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                category:
                  type: string
                  enum:
                  - job-primary-photo
                  - job-primary-gallery
              required:
              - file
              - category
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"

  /client/v1/users/{user_id}/jobs/social-projects:
    get:
      tags: [Social Project]
      summary: "List social projects"
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/ListPage"
        - $ref: "#/components/parameters/ListLimit"
        - $ref: "#/components/parameters/JobListFilterName"
        - $ref: "#/components/parameters/JobListFilterStatus"
        - $ref: "#/components/parameters/JobListFilterRating"
        - in: query
          name: filter_year
          description: "Год"
          schema:
            type: number
            format: year
            example: ""
        - in: query
          name: filter_is_any_review
          description: "Экспертное заключение, рецензия, отзыв"
          schema:
            type: string
            enum: ['0', '1']
            example: ""
        - in: query
          name: filter_volunteer_id
          description: "Привлечение добровольцев/волонтеров"
          schema:
            type: number
            example: ""
        - in: query
          name: filter_is_favorite
          description: "Включен в виртуальную гостиную"
          schema:
            type: string
            enum: ['0', '1']
            example: ""
        - in: query
          name: filter_is_approbation
          description: "Апробация на инновационной площадке / в ресурсном центре"
          schema:
            type: string
            enum: ['0', '1']
            example: ""
        - in: query
          name: filter_is_remote_format
          description: "Возможность реализации в дистанционном формате"
          schema:
            type: string
            enum: ['0', '1']
            example: ""
        - in: query
          name: filter_is_publication
          description: "Наличие публикации"
          schema:
            type: string
            enum: ['0', '1']
            example: ""
        - in: query
          name: filter_rnsu_category_ids
          description: "Категории РНСУ"
          schema:
            type: string
            example: ""
        - in: query
          name: filter_needy_category_ids
          description: "Категории"
          schema:
            type: string
            example: ""
        - in: query
          name: filter_needy_category_target_group_ids
          description: "Целевые группы"
          schema:
            type: string
            example: ""
        - in: query
          name: filter_social_service_ids
          description: "Формы социального обслуживания (сопровождения)"
          schema:
            type: string
            example: ""
        - $ref: "#/components/parameters/JobListSortBy"
        - $ref: "#/components/parameters/ListSortDirection"
      security:
        - bearerAuth: []
      responses:
        200:
          description: "OK"   

    post:
      tags: [Social Project]
      summary: "Create social project"
      parameters:
        - $ref: "#/components/parameters/UserId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primary:
                  $ref: "#/components/schemas/JobPrimaryInfoWithFilesID"
                experience: 
                  $ref: "#/components/schemas/JobExperience"
                contacts:
                  $ref: "#/components/schemas/JobContacts"
                reporting_periods:
                  $ref: "#/components/schemas/JobReportingPeriods"
                info:
                  $ref: "#/components/schemas/SocialProjectJobInfo"
      security:
        - bearerAuth: []
      responses:
        200:
          description: "OK"

  /client/v1/users/{user_id}/jobs/social-projects/{id}:
    get:
      tags: [Social Project]
      summary: "Get social project by ID"
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/SocialProjectId"
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      status:
                        type: string
                        enum: 
                        - accepted
                        - pending
                        - rejected
                      rejected_status_description:
                        type: string
                        nullable: true
                      primary:
                        $ref: "#/components/schemas/JobPrimaryInfoWithFilesExpanded"
                      experience:
                        $ref: "#/components/schemas/JobExperience"
                      contacts:
                        $ref: "#/components/schemas/JobContacts"
                      reporting_periods:
                        $ref: "#/components/schemas/JobReportingPeriodsWithID"
                      info:
                        $ref: "#/components/schemas/SocialProjectJobInfo"
                  meta:
                    type: array
                    nullable: true
                    example: null
                  error:
                    type: string
                    nullable: true
                    example: null
    put:
      tags: [Social Project]
      summary: "Update social project by ID"
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/SocialProjectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primary:
                  $ref: "#/components/schemas/JobPrimaryInfoWithFilesID"
                experience:
                  $ref: "#/components/schemas/JobExperience"
                contacts:
                  $ref: "#/components/schemas/JobContacts"
                reporting_periods:
                  $ref: "#/components/schemas/JobReportingPeriodsWithNullableID"
                info:
                  $ref: "#/components/schemas/SocialProjectJobInfo"
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"
    delete:
      tags: [Social Project]
      summary: "Delete social project by ID"
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/SocialProjectId"
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"

  /admin/v1/users/{user_id}/jobs/social-projects/{id}/approve:
    patch:
      tags: [Social Project]
      summary: "Approve social project"
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/SocialProjectId"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_favorite:
                  type: boolean
                  example: true
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"

  /admin/v1/users/{user_id}/jobs/social-projects/{id}/reject:
    patch:
      tags: [Social Project]
      summary: "Reject social project"
      parameters:
        - $ref: "#/components/parameters/UserId"
        - $ref: "#/components/parameters/SocialProjectId"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  example: "comment"
      security:
      - bearerAuth: []
      responses:
        200:
          description: "OK"

  /admin/v1/users/jobs/social-projects:
    get:
      tags: [Social Project]
      summary: "List all social projects"
      parameters:
        - $ref: "#/components/parameters/ListPage"
        - $ref: "#/components/parameters/ListLimit"
        - $ref: "#/components/parameters/JobListFilterName"
        - $ref: "#/components/parameters/JobListFilterStatus"
        - $ref: "#/components/parameters/JobListFilterRating"
        - $ref: "#/components/parameters/JobListSortBy"
        - $ref: "#/components/parameters/ListSortDirection"
      security:
        - bearerAuth: []
      responses:
        200:
          description: "OK"   

  /admin/v1/users/companies:
    get:
      tags: [Company]
      summary: "List all companies"
      parameters:
        - $ref: "#/components/parameters/ListPage"
        - $ref: "#/components/parameters/ListLimit"
        - $ref: "#/components/parameters/CompanyListFilterName"
        - $ref: "#/components/parameters/CompanyListFilterStatus"
        - $ref: "#/components/parameters/CompanyListFilterDistrictId"
        - $ref: "#/components/parameters/CompanyListSortBy"
        - $ref: "#/components/parameters/ListSortDirection"
      security:
        - bearerAuth: []
      responses:
        200:
          description: "OK"  

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    JobPrimaryInfo:
      type: object
      description: ""
      properties:
        name:
          type: string
          description: "Наименование проекта *"
          example: "Наименование проекта"
        annotation:
          type: string
          description: "Аннотация *"
          example: "Аннотация"
        objectives:
          type: string
          description: "Основные задачи *"
          example: "Основные задачи"
        purpose:
          type: string
          description: "Цель *"
          example: "Цель"
        payment_method_id:
          type: number
          description: "Реализация для гражданина бесплатно/платно *" 
          example: 21
        partnership:
          type: object
          description: "Взаимодействие, партнерство с другими организациями"
          nullable: true
          properties:
            description:
              type: string
              description: "Описание"
              example: "Взаимодействие, партнерство с другими организациями"
        volunteer_id:
          type: number
          description: "Привлечение добровольцев и волонтеров *" 
          example: 31
        needy_category_ids:
          type: array
          description: "Категории *"
          items:
            type: number
          example: [41, 42]
        needy_category_target_group_ids:
          type: array
          description: "Целевые группы *"
          items:
            type: number
          example: [58, 59]
        social_service_ids:
          type: array
          description: "Формы социального обслуживания (сопровождения) *"
          items:
            type: number
          example: [61, 62]
        qualitative_results:
          type: string
          description: "Основные качественные результаты *"
          example: "Основные качественные результаты"
        social_results:
          type: string
          description: "Социальные результаты *"
          example: "Социальные результаты"
        rnsu_category_ids:
          type: array
          description: "Категории по РНСУ *"
          items:
            type: number
          example: [81, 82]
        replicability:
          type: string
          description: "Тиражируемость"
          nullable: true
          example: "Тиражируемость"
        approbation:
          type: object
          description: "Апробация на инновационной площадке/в ресурсном центре"
          nullable: true
          properties:
            description:
              type: string
              description: "Описание"
              example: "Апробация"
        expert_opinion:
          type: object
          description: "Наличие экспертного заключения"
          nullable: true
          properties:
            description:
              type: string
              description: "Описание"
              example: "Наличие экспертного заключения"
        review:
          type: object
          description: "Наличие отзыва"
          nullable: true
          properties:
            description:
              type: string
              description: "Описание"
              example: "Наличие отзыва"
        comment:
          type: object
          description: "Наличие рецензии"
          nullable: true
          properties:
            description:
              type: string
              description: "Описание"
              example: "Наличие рецензии"
        video:
          type: string
          description: "Видео ролик"
          nullable: true
          example: "Видео ролик"
        required_resources_description:
          type: string
          description: "Краткое описание необходимого ресурсного обеспечения *"
          example: "Краткое описание необходимого ресурсного обеспечения"
        is_best_practice:
          type: boolean
          description: "Лучшая практика по мнению руководства организации"
          example: true
        is_remote_format_possible:
          type: boolean
          description: "Возможность реализации в дистанционном формате"
          example: true
    JobPrimaryInfoWithFilesID:
      allOf:
        - $ref: "#/components/schemas/JobPrimaryInfo"
        - type: object
          properties:
            photo_file_id:
              type: number
              description: "ID файла обложки"
              nullable: true
              example: null
            gallery_file_ids:
              type: array
              description: "Галерея"
              items:
                type: number
                description: "ID файла галереи"
              example: []
    JobPrimaryInfoWithFilesExpanded:
      allOf:
        - $ref: "#/components/schemas/JobPrimaryInfo"
        - type: object
          properties:
            photo_file:
              $ref: "#/components/schemas/UserFile"
            gallery_files:
              type: array
              items:
                $ref: "#/components/schemas/UserFile"
    JobExperience:
      type: object
      description: ""
      properties:
        results_in_journal:
          type: object
          nullable: true
          description: "Описание результатов в виде статьи, опубликованной в сборнике, журнале"
          properties:
            description:
              type: string
              description: "Описание"
              example: "Описание"
              nullable: true
            link:
              type: string
              description: "Ссылка"
              example: "Ссылка"
              nullable: true
        results_of_various_events:
          type: object
          nullable: true
          description: "Представление результатов на мероприятиях различного уровня"
          properties:
            description:
              type: string
              description: "Описание"
              example: "Описание"
              nullable: true
            link:
              type: string
              description: "Ссылка"
              example: "Ссылка"
              nullable: true
        results_info_in_site:
          type: object
          nullable: true
          description: "Представление информации о результатах на сайте организации"
          properties:
            description:
              type: string
              description: "Описание"
              example: "Описание"
              nullable: true
            link:
              type: string
              description: "Ссылка"
              example: "Ссылка"
              nullable: true
        results_info_in_media:
          type: object
          nullable: true
          description: "Представление информации о результатах в СМИ"
          properties:
            description:
              type: string
              description: "Описание"
              example: "Описание"
              nullable: true
            link:
              type: string
              description: "Ссылка"
              example: "Ссылка"
              nullable: true
        results_seminars:
          type: object
          nullable: true
          description: "Проведение мастер-классов (семинаров) по результатам"
          properties:
            description:
              type: string
              description: "Описание"
              example: "Описание"
              nullable: true
            link:
              type: string
              description: "Ссылка"
              example: "Ссылка"
              nullable: true
    JobContacts:
      type: object
      description: ""
      properties:
        fio:
          type: string
          description: "ФИО ответственного лица *"
          example: "ФИО"
        email:
          type: string
          description: "Электронная почта *"
          example: "test@test.com"
        phone:
          type: string
          description: "Контактный телефон *"
          example: "+7 (911) 999 12-71"
    JobReportingPeriods:
      type: array
      description: ""
      items:
        type: object
        description: ""
        properties:
          total:
            type: number
            description: "Общее количество участников за отчетный период *"
            example: 6
          year:
            type: number
            description: "Отчётный период *"
            example: 2022
          families:
            type: number
            description: "Количество семей"
            nullable: true
            example: 2
          children:
            type: number
            description: "Количество детей"
            nullable: true
            example: 2
          men:
            type: number
            description: "Количество мужчин"
            nullable: true
            example: 2
          women:
            type: number
            description: "Количество женщин"
            nullable: true
            example: 2
    JobReportingPeriodsWithID:
      allOf:
        - $ref: "#/components/schemas/JobReportingPeriods"
        - type: array
          items:
            type: object
            properties:
              id:
                type: number
    JobReportingPeriodsWithNullableID:
      allOf:
        - $ref: "#/components/schemas/JobReportingPeriodsWithID"
        - type: array
          items:
            type: object
            properties:
              id:
                type: number
                nullable: true
                example: 1
    SocialProjectJobInfo:
      type: object
      description: ""
      properties:
        participant:
          type: object
          description: "Вы участник, а не организатор? *"
          nullable: true
          properties:
            description:
              type: string
              description: "Описание"
              example: "организатор"
        implementation_period:
          type: string
          description: "Период реализации проекта *"
          example: "Период реализации проекта"
        implementation_level_id:
          type: number
          description: "Уровень реализации проекта *"
          example: 71
        public_work_ids:
          type: array
          description: "Наименование государственной работы"
          items:
            type: number
          example: [91, 92]
        service_type_ids:
          type: array
          description: "Вид услуги"
          items:
            type: number
          example: [101, 102]
        service_name_ids:
          type: array
          description: "Наименование услуги"
          items:
            type: number
          example: [111, 112]
        need_recognition_ids:
          type: array
          description: "Обстоятельства признания нуждаемости *"
          items:
            type: number
          example: [121, 122]
    UserFile:
      type: object
      description: ""
      properties:
        id:
          type: number
          description: ""
          example: 1
        path:
          type: string
          description: "Путь в хранилище к файлу"
          example: "users/1/job-primary-photo/uwCBaPuMGtWeuk5W5MWJ2cI6xEMWOESuThIUxML4.png"
        original_name:
          type: string
          description: "Оригинальное название"
          example: "Screenshot from 2022-07-30 18-08-19.png"
    JobStatus:
      type: string
      enum:
        - accepted
        - rejected
        - pending
  parameters:
    UserId:
      in: path
      name: user_id
      description: "ID of user"
      required: true
      schema:
        type: number
        example: 1
    SocialProjectId:
      in: path
      name: id
      description: "ID of social project"
      example: 1
      required: true
      schema:
        type: number
    ListPage:
      in: query
      name: page
      description: "Страница"
      required: true
      schema:
        type: number
        example: 1
    ListLimit:
      in: query
      name: limit
      description: "Кол-во записей на странице"
      required: true
      schema:
        type: number
        example: 5
    JobListFilterName:
      in: query
      name: filter_name
      description: "Название"
      schema:
        type: string
        example: ""
    JobListFilterStatus:
      in: query
      name: filter_status
      description: "Статус"
      schema:
        $ref: "#/components/schemas/JobStatus"
    JobListFilterRating:
      in: query
      name: filter_rating
      description: "Рейтинг"
      schema:
        type: number
        minimum: 0
        maximum: 5
    JobListSortBy:
      in: query
      name: sort_by
      description: "Поле для сортировки"
      schema:
        type: string
        enum:
          - created_at
          - updated_at
          - status
          - rating
    CompanyListFilterName:
      in: query
      name: filter_name
      description: "Короткое название"
      schema:
        type: string
        example: ""
    CompanyListFilterDistrictId:
      in: query
      name: filter_district_id
      description: "Район"
      schema:
        type: number
        example: ""
    CompanyListFilterStatus:
      in: query
      name: filter_status
      description: "Статус"
      schema:
        $ref: "#/components/schemas/JobStatus"
    CompanyListSortBy:
      in: query
      name: sort_by
      description: "Поле для сортировки"
      schema:
        type: string
        enum:
          - created_at
          - updated_at
          - status
    ListSortDirection:
      in: query
      name: sort_direction
      description: "Направление сортировки"
      schema:
        type: string
        enum:
          - asc
          - desc